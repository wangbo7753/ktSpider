#
# Log4J Settings for log4j 1.2.x (via jakarta-commons-logging)
#
# The five logging levels used by Log are (in order):
#
#   1. DEBUG (the least serious)
#   2. INFO
#   3. WARN
#   4. ERROR
#   5. FATAL (the most serious)


# Set root logger level to WARN and append to stdout
log4j.rootLogger= INFO, stdout, applog

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %5p (%c:%L) - %m%n

log4j.appender.applog=org.apache.log4j.RollingFileAppender
log4j.appender.applog.Threshold=DEBUG
log4j.appender.applog.File=D:\\log4j\\msac\\debug.log
log4j.appender.applog.MaxFileSize=5MB
log4j.appender.applog.MaxBackupIndex=10
log4j.appender.applog.layout=org.apache.log4j.PatternLayout
log4j.appender.applog.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p [%C{1},%L] %m%n

# Print only messages of level ERROR or above in the package noModule.
log4j.logger.noModule = FATAL

# OpenSymphony Stuff
log4j.logger.com.opensymphony = WARN
log4j.logger.org.apache.struts2 = WARN

# Spring Stuff
log4j.logger.org.springframework = WARN

#JDBC
log4j.logger.java.sql.Connection=ERROR
log4j.logger.java.sql.Statement=ERROR
log4j.logger.java.sql.PreparedStatement=ERROR

